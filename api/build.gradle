buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
    }
}

plugins {
    id 'com.github.sherter.google-java-format' version '0.8'
    id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    archiveBaseName.set("chezz")
    archiveVersion.set(rootProject.file("version").text.trim())

    def prop = new Properties()
    prop.setProperty("version", archiveVersion.get())
    def propFile = new File("${project.projectDir}/src/main/resources/app.properties")
    propFile.createNewFile()
    prop.store(propFile.newWriter(), null)
}

compileJava {
    options.compilerArgs << "-Xlint:all"
    options.compilerArgs << "-Werror"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

repositories {
    mavenCentral()
}

sourceCompatibility = 11
targetCompatibility = 11

ext['junit-jupiter.version'] = '5.5.2'

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation("de.mkammerer:argon2-jvm:2.6")
    implementation("org.apache.logging.log4j:log4j-api:2.12.1")
    implementation("org.apache.logging.log4j:log4j-core:2.12.1")
    implementation("org.springframework.security:spring-security-crypto:5.2.1.RELEASE")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("commons-codec:commons-codec:1.13")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.5.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.2")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.5.2")
}